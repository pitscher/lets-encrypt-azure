on:
  push:
    branches:
      - master

env:
  ResourceGroup: pitscherswelt-func
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@28c7f3d2b5162b5ddd3dfd9a45aa55eaf396478b # pin@v2
    - uses: actions/setup-dotnet@6efb2bd78f16e08562660f8246d6bd76adf6281f # pin@v1
    - name: build
      run: dotnet build -c Release
    - name: test
      run: dotnet test -c Release --no-build **/*.Test*.csproj
    - name: publish
      run: dotnet publish -c Release --no-build LetsEncrypt.Func/LetsEncrypt.Func.csproj -o release/LetsEncrypt.Func
    - uses: actions/upload-artifact@3446296876d12d4e3a0f3145a3c87e67bf0a16b5 # pin@v1
      with:
        name: deploy
        path: deploy
    - uses: actions/upload-artifact@3446296876d12d4e3a0f3145a3c87e67bf0a16b5 # pin@v1
      with:
        name: functionapp
        path: release/LetsEncrypt.Func
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@18f0f591fbc635562c815484d73b6e8e3980482e # pin@v1
        with:
          name: functionapp
          path: functionapp
      - uses: actions/download-artifact@18f0f591fbc635562c815484d73b6e8e3980482e # pin@v1
        with:
          name: deploy
          path: deploy
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure CLI ARM deployment
        uses: azure/CLI@v1
        with:
          inlineScript: |
            cd deploy
            chmod +x deploy.sh
            ./deploy.sh $ResourceGroup
      - uses: azure/functions-action@6042d67de76fd158d51281ddb40a22c3e1c1e1d1 # pin@v1
        with:
          app-name: ${{ env.ResourceGroup }}
          package: functionapp
